name: Quality Gates

on:
  pull_request:
  push:
    branches: [ main, master ]

jobs:
  gates:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Root dependencies (checker, playwright, etc.)
      - name: Install dependencies (root)
        run: npm ci

      # App-specific dependencies (repo is not using npm workspaces)
      - name: Install UI dependencies
        run: npm --prefix apps/coordination_ui install --no-audit --no-fund

      # Build the UI app (vite build)
      - name: Build UI
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
          VITE_SENTRY_ENV: ci
          VITE_RELEASE_SHA: ${{ github.sha }}
        run: npm --prefix apps/coordination_ui run build

      # Contract-driven UI coverage (your existing checker)
      - name: UI coverage
        run: npm run check:ui

      # Install Playwright browsers & system deps
      - name: Install Playwright
      if: ${{ false }}
        run: npx playwright install --with-deps

      # Start preview server for the built UI (vite preview on 4173)
      - name: Start preview server
        working-directory: apps/coordination_ui
        run: |
          npm run preview &
          echo "PREVIEW_PID=$!" >> $GITHUB_ENV
          # Wait for server to be ready (60s timeout)
          timeout 60 bash -c 'until curl -s http://localhost:4173 > /dev/null; do sleep 1; done'

      # --- QUARANTINE any Jest-style unit tests so only Playwright runs ---
      - name: Quarantine unit tests (Jest) before smoke
        run: |
          if [ -d "__tests__" ]; then mv __tests__ __tests__.ci_hold; fi
          if [ -d "__tests__._skip" ]; then mv "__tests__._skip" __tests__.ci_hold_skip; fi

      # Contract-driven navigation smoke test (Playwright only)
      - name: Smoke navigation (contract-driven)
        env:
          PW_EMAIL: ${{ secrets.PW_EMAIL }}
          PW_PASSWORD: ${{ secrets.PW_PASSWORD }}
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:smoke

      # Button functionality tests
      - name: Button click and navigation tests
        env:
          PW_EMAIL: ${{ secrets.PW_EMAIL }}
          PW_PASSWORD: ${{ secrets.PW_PASSWORD }}
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:buttons

      # -------- NEW: Route coverage (manifest-based) --------
      - name: Route coverage smoke tests
        env:
          VITE_E2E: true
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:routes

      # -------- NEW: Accessibility (axe-core WCAG A/AA) --------
      - name: Accessibility tests (axe-core)
        env:
          VITE_E2E: true
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:a11y

      # -------- NEW: Visual regression (light/dark snapshots) --------
      - name: Visual regression tests
        env:
          VITE_E2E: true
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:visual

      # Restore quarantined unit tests regardless of outcome
      - name: Restore unit test folders
        if: always()
        run: |
          if [ -d "__tests__.ci_hold" ]; then mv __tests__.ci_hold __tests__; fi
          if [ -d "__tests__.ci_hold_skip" ]; then mv __tests__.ci_hold_skip "__tests__._skip"; fi

      # Artifacts: Playwright HTML report (default path)
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

      # Artifacts: UI gaps report (if checker output exists)
      - name: Upload UI gaps (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-gaps
          path: coverage/ui-gaps.*
          if-no-files-found: ignore
                - name: Route coverage smoke tests
        continue-on-error: true
        env:
          VITE_E2E: true
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:routes

      - name: Accessibility tests (axe-core)
        continue-on-error: true
        env:
          VITE_E2E: true
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:a11y

      - name: Visual regression tests
        continue-on-error: true
        env:
          VITE_E2E: true
          PW_SKIP_WEBSERVER: 1
          BASE_URL: http://localhost:4173
        run: npm run test:visual