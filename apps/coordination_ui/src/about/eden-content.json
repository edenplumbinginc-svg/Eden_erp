{
  "headline": "Why Eden",
  "subhead": "Noise-free ops with owner-routed incidents, guard-gated releases, and verifiable performance.",
  "pillars": [
    {
      "title": "Noise-free Alerts",
      "bullets": [
        "Contract-based routing targets the *right* owner",
        "Auth-aware smoke tests stop broken routes at PR time",
        "State coverage: loading/empty/error/unauthorized/not_found"
      ]
    },
    {
      "title": "Incident Correlation",
      "bullets": [
        "Duplicate alarms roll up into one durable incident",
        "Ack path is one-click with `/acknowledge`",
        "Velocity + incidents gives leading indicators"
      ]
    },
    {
      "title": "Guard-Driven Releases",
      "bullets": [
        "UI coverage + smoke tests block risky merges",
        "Owner webhooks notify *specific* channels",
        "Config hardened; no half-built pages ship"
      ]
    }
  ],
  "workflow": {
    "title": "Workflow (Field → Incident → Guard)",
    "steps": [
      "Field ops creates/updates task",
      "Signals aggregate into metrics",
      "Anomaly ⇒ alarm ⇒ correlated incident",
      "Owner is auto-notified (targeted webhooks)",
      "Ack + remediate; Velocity confirms recovery",
      "Guard passes ⇒ ship with confidence"
    ]
  },
  "compare": {
    "title": "Eden vs. Typical Tools",
    "rows": [
      ["Owner-routed alerts", "✅", "⚠️ generic channels"],
      ["Contract-enforced UI coverage", "✅", "❌ manual checks"],
      ["Auth-aware smoke tests", "✅", "❌ flaky or missing"],
      ["Incident correlation", "✅", "⚠️ basic alerts only"],
      ["Release guard (PR gate)", "✅", "❌ after-the-fact rollbacks"]
    ],
    "left": "Eden",
    "right": "Others"
  }
}
