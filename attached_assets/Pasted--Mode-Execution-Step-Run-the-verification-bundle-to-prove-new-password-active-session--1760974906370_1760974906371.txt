[Mode: Execution]

**Step:** Run the verification bundle to prove: new password active, **session pooler (aws-0)** in use, guards locked, TLS on, smoke test green.

**Why it matters:** This single run confirms we’re past the dual-DB loop and safe to proceed to Phase-2 automations and Phase-3 “ball-in-court” logic.

**Inputs needed:**

* Replit Secrets already set (`DATABASE_URL` with **new** password, `EXPECTED_DB_HOST`, `EXPECTED_DB_PROJECT_REF`)
* Your repo running locally in Replit shell

**Command (copy–paste):**

```bash
# --- verify-all.sh ---
set -euo pipefail
export PSQL_PAGER=cat

echo "1) Guards check"
npm run verify:db

echo; echo "2) Clean boot"
pkill -f "node server" 2>/dev/null || true
node server.js > /tmp/server.log 2>&1 & SERVER_PID=$!
sleep 3
echo "PID: $SERVER_PID"

echo; echo "3) Fingerprint"
curl -s http://localhost:3000/api/debug/dbinfo | jq .

echo; echo "4) SSL proof"
psql "$DATABASE_URL" -X -c "show ssl;"
psql "$DATABASE_URL" -X -c "select inet_server_addr() as db_ip, current_database() as db, current_user as usr;"

echo; echo "5) Smoke test"
bash -lc './prod-smoke.sh' || { echo "❌ Smoke failed. Tail:"; tail -100 /tmp/server.log; exit 1; }

echo; echo "6) Sanity: no TLS bypass"
grep -RIn "NODE_TLS_REJECT_UNAUTHORIZED" . && { echo "❌ TLS bypass present"; exit 1; } || echo "OK"

grep -RIn "rejectUnauthorized\s*:\s*false" . && { echo "❌ Insecure HTTP client"; exit 1; } || echo "OK"

echo; echo "✅ ALL CHECKS PASSED"
```

Run it:

```bash
bash -lc 'cat > verify-all.sh << "EOF"
# (paste the script block above here)
EOF
bash -lc "chmod +x verify-all.sh && ./verify-all.sh"'
```

**Success check:**

* `verify:db` passes.
* `/api/debug/dbinfo` shows `"pooler_type":"session"`, host `aws-0-us-east-2.pooler.supabase.com:5432`, project ref `jwehjdggkskmjrmoqibk`.
* `show ssl;` returns `on`.
* Smoke ends with `✅✅✅ PASS: transactional writes & event bus verified.`
* Sanity step prints `OK` twice (no insecure flags).

**Next:** wait for user
