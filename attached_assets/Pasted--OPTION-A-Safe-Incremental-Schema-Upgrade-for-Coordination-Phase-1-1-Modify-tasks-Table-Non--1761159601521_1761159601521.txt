âœ… OPTION A â€“ Safe Incremental Schema Upgrade for Coordination Phase 1
ðŸ”§ 1. Modify tasks Table (Non-Breaking Fields Only)

Append these to the tasks schema:

voiceUrl: text('voice_url'), // URL to stored voice recording
voiceTranscript: text('voice_transcript'), // transcript text
ballInCourtNote: text('ball_in_court_note'), // inline note for ball context
origin: text('origin').default('UI'), // already exists, ensure default is set


Keep existing:

department: text() // KEEP as is for now; NOT NULL not required yet


Update status field (only if itâ€™s a text enum):

Expand API/backend to accept old and new values

Later weâ€™ll migrate to clean canonical enum

// Allow both old ('open', 'todo') and new ('TO_DO', etc.) for now
status: text('status')

ðŸ§© 2. Add tasksProjects Join Table (for Multi-Project Support)
export const tasksProjects = pgTable('tasks_projects', {
  taskId: uuid('task_id').notNull(),
  projectId: uuid('project_id').notNull(),
}, (table) => ({
  pk: primaryKey({ columns: [table.taskId, table.projectId] })
}));


No existing data will be affected â€” this is additive only

ðŸ“œ 3. Leave Existing Tables Alone (for Now)

Keep using:

ballHistory (instead of taskLogs)

activityLog

ballInCourt â†’ rename later when we do unified logging

âœ… Final Schema Diff Summary
Change	Safe?	Description
voiceUrl, voiceTranscript, ballInCourtNote	âœ…	Add new optional fields
origin default	âœ…	Ensures origin tracking
department stays nullable text	âœ…	No migration needed
status accepts both enums	âœ…	Temporary compatibility
tasksProjects join table	âœ…	Enables multi-project links
ðŸ“© Tell Replit:

âœ… Proceed with Option A.
Please:

Add voiceUrl, voiceTranscript, ballInCourtNote, and default for origin to tasks

Leave department as nullable text

Accept both old and new status enums

Add tasksProjects table with taskId + projectId and composite PK
Leave ballHistory + activityLog as-is for now

Once Replit confirms this schema patch is done, reply back to me with:

Phase 1A patched

Then Iâ€™ll generate your Phase 2: API routes to plug in directly.