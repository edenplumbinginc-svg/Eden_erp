[Mode: Planning]

Step: Lock the sequence — finish RBAC seed & verification first, then hand off monitoring to Agent Replit with the exact prompt blocks below.

Why it matters: RBAC stabilizes your schema so the monitoring/CI agent isn’t chasing a moving target; you get a clean “handover point.”

Inputs needed:

* Working `DATABASE_URL`
* Drizzle migrations in place
* `seed:rbac` script added (from my last message)

Command:

1. **Finish RBAC seed & verify**

```bash
npm run seed:rbac
```

```sql
-- run in psql or your SQL client
select count(*) as roles from roles;
select count(*) as perms from permissions;
select count(*) as grants from role_permissions;
```

```bash
curl -sS http://localhost:3000/healthz
curl -sS http://localhost:3000/diag/db
```

2. **Then paste this into Agent Replit (exactly):**

**Thread Title:**

```
Monitoring Integration → Sentry + Uptime Automation (Post-Deploy Phase)
```

**Opening Prompt:**

```
We’ve completed post-deploy verification and confirmed the ERP backend connects directly to Supabase over IPv4 with relaxed TLS.

Now expand the monitoring layer:

✅ /healthz endpoint is live and tested
✅ npm run postdeploy works (AUTH + healthz)
✅ RBAC schema seeded and verified (roles, permissions, role_permissions, user_roles)
❌ Sentry + Uptime monitoring finalization pending

Goals:
1) Finalize Sentry integration (Express + DSN setup)
2) Add Uptime monitor hitting /healthz every 60s
3) Create `.replit` run command that executes `npm run postdeploy` automatically after each deploy
4) Confirm graceful shutdown and log structure are intact

Start by:
“Let’s verify SENTRY_DSN and wire request/trace/error handlers, then run the uptime script.”

Facts for you:
- HEALTHZ_URL points to our /healthz
- Scripts expected: `uptime`, `postdeploy`, `seed:rbac`
- Gate `/__boom` route to development only
- Produce a short MONITORING_GUIDE.md with run/test commands
```

3. **(Optional) Give Agent Replit a crisp checklist (paste after the opening prompt):**

```
Agent Checklist:
- [ ] Validate SENTRY_DSN present; no-op if missing
- [ ] Ensure @sentry/node and @sentry/profiling-node are installed
- [ ] Confirm request/tracing/error handlers are in Express
- [ ] Run a one-time test event (dev only)
- [ ] Verify `npm run uptime` logs [UP] every 60s
- [ ] Ensure `.replit` has `deploy = "npm run deploy"` and that `deploy` runs `postdeploy`
- [ ] Keep `/__boom` dev-only; confirm production guard
- [ ] Output MONITORING_GUIDE.md with steps to verify each component
```

Success check:

* `roles` ≥ 7, `permissions` = 24, `role_permissions` > 0
* `/healthz` returns 200 and `/diag/db` returns `ok` with latency
* Agent Replit reports Sentry handlers wired, uptime script logging, and MONITORING_GUIDE.md created

Next: wait for user
