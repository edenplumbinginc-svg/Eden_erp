[Mode: Execution]
Step: Add a premium token set (colors, elevation, radius, focus rings) to your global CSS, preserving your existing variable names where possible.
Layer: Frontend layer → Theme tokens (active).
Why it matters: A single, coherent token map lets you upgrade the entire UI’s look—contrast, depth, and feel—without hunting through components.

Inputs needed: Access to your global stylesheet (e.g., `src/styles/global.css` or wherever your current CSS variables live).

Command (copy–paste into your tokens file; adjust names only if these collide with existing ones):

```css
/* === Premium Token Set v1 (Light) === */
:root {
  /* Core palette */
  --brand-h: 160; /* emerald hue anchor */
  --brand-s: 60%;
  --brand-l: 40%;

  /* Semantic colors (OKLCH for perceptual steps if you use it; here HSL for wide support) */
  --color-bg: hsl(0 0% 100%);
  --color-surface: hsl(0 0% 99%);
  --color-surface-2: hsl(0 0% 97%);
  --color-border: hsl(220 14% 90%);
  --color-text: hsl(220 15% 20%);
  --color-muted: hsl(220 10% 45%);

  /* Brand ramp */
  --color-primary: hsl(var(--brand-h) var(--brand-s) var(--brand-l));        /* base */
  --color-primary-600: hsl(var(--brand-h) var(--brand-s) calc(var(--brand-l) - 6%));
  --color-primary-700: hsl(var(--brand-h) var(--brand-s) calc(var(--brand-l) - 12%));
  --color-primary-500: hsl(var(--brand-h) var(--brand-s) calc(var(--brand-l) + 4%));
  --color-primary-50: hsl(var(--brand-h) 60% 96%);
  --color-accent: hsl(220 90% 56%); /* soft blue for focus/links */

  /* Status */
  --color-success: hsl(160 65% 36%);
  --color-warning: hsl(38 92% 50%);
  --color-danger:  hsl(0 82% 56%);

  /* Radius scale (soft, premium) */
  --radius-xs: 6px;
  --radius-sm: 10px;
  --radius-md: 14px;
  --radius-lg: 18px;
  --radius-xl: 24px;
  --radius-2xl: 32px;

  /* Elevation (design tokens → reusable box-shadow presets) */
  --shadow-0: none;
  --shadow-1: 0 1px 2px rgba(0,0,0,.05), 0 1px 1px rgba(0,0,0,.03);
  --shadow-2: 0 4px 10px rgba(0,0,0,.06), 0 1px 3px rgba(0,0,0,.06);
  --shadow-3: 0 10px 18px rgba(0,0,0,.08), 0 2px 6px rgba(0,0,0,.06);
  --shadow-4: 0 18px 30px rgba(0,0,0,.10), 0 4px 10px rgba(0,0,0,.07);

  /* Focus ring (soft premium glow) */
  --ring-color: color-mix(in hsl, var(--color-accent) 70%, white 30%);
  --ring-outline: 0 0 0 3px color-mix(in hsl, var(--color-accent) 20%, transparent 80%),
                  0 0 0 6px color-mix(in hsl, var(--color-accent) 14%, transparent 86%);

  /* Typography stays as set in Step 1 */
  --font-sans: "Inter Variable", Inter, system-ui, -apple-system, "Segoe UI",
               Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji",
               "Segoe UI Emoji", "Segoe UI Symbol";
}

/* === Premium Token Set v1 (Dark) === */
@media (prefers-color-scheme: dark) {
  :root {
    --color-bg: hsl(220 16% 10%);
    --color-surface: hsl(220 16% 12%);
    --color-surface-2: hsl(220 16% 15%);
    --color-border: hsl(220 14% 22%);
    --color-text: hsl(0 0% 97%);
    --color-muted: hsl(220 10% 70%);

    --color-primary: hsl(var(--brand-h) var(--brand-s) 45%);
    --color-primary-600: hsl(var(--brand-h) var(--brand-s) 40%);
    --color-primary-700: hsl(var(--brand-h) var(--brand-s) 35%);
    --color-primary-500: hsl(var(--brand-h) var(--brand-s) 50%);
    --color-primary-50: hsl(var(--brand-h) 35% 20%);
    --color-accent: hsl(220 100% 66%);

    /* Dark-tuned elevation (reduce spread/alpha to avoid “powdery” look) */
    --shadow-1: 0 1px 2px rgba(0,0,0,.35);
    --shadow-2: 0 4px 10px rgba(0,0,0,.38);
    --shadow-3: 0 10px 18px rgba(0,0,0,.42);
    --shadow-4: 0 18px 30px rgba(0,0,0,.46);

    --ring-color: color-mix(in hsl, var(--color-accent) 85%, black 15%);
    --ring-outline: 0 0 0 3px color-mix(in hsl, var(--color-accent) 30%, transparent 70%),
                    0 0 0 6px color-mix(in hsl, var(--color-accent) 18%, transparent 82%);
  }
}

/* === Optional baseline utilities (non-framework) === */
.card {
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-1);
}
.card:hover { box-shadow: var(--shadow-2); transition: box-shadow .2s ease; }

.btn-primary {
  background: var(--color-primary);
  color: white;
  border-radius: var(--radius-md);
  border: 1px solid color-mix(in hsl, var(--color-primary) 85%, black 15%);
  box-shadow: var(--shadow-1);
  transition: transform .06s ease, box-shadow .2s ease, filter .2s ease;
}
.btn-primary:hover { box-shadow: var(--shadow-2); filter: saturate(1.05); }
.btn-primary:active { transform: translateY(1px); box-shadow: var(--shadow-1); }

.focus-ring {
  outline: none;
  box-shadow: var(--ring-outline);
}
:where(button, input, select, textarea):focus-visible { box-shadow: var(--ring-outline); outline: none; }
```

Success check:

1. `npm run dev` builds clean.
2. Inspect any page: backgrounds/surfaces/borders update; border radii feel softer; hover elevation on `.card` increases subtly; `.btn-primary` looks richer.
3. Keyboard through controls: a soft blue glow appears on focus (Tab) from `--ring-outline`.
4. Toggle OS dark mode to verify dark token set applies without layout shifts.

Next: wait for user.

Mini-lesson (why this order works): fonts → tokens → motion → premium flourishes. Typography sets rhythm; tokens define the system’s physics; motion then inherits those constants; the premium layer (glass/blur/gradients) becomes a theme toggle, not a refactor. When you’re ready, paste your current token block so I can diff/merge precisely against your names.
