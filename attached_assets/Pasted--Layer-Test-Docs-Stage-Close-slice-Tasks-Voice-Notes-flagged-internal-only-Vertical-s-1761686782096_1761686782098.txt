[Layer: Test+Docs] [Stage: Close slice ‚Äî Tasks ‚Üí Voice Notes (flagged, internal-only)]

Vertical slice looks shipped end-to-end, including the üéôÔ∏è badge. Let‚Äôs lock it with tests + docs so we don‚Äôt loop back.

# Acceptance Criteria ‚Üí Evidence

**AC 1 ‚Äî Visibility & Guards**

* `voiceToText` flag OFF ‚Üí no Record UI, no üéôÔ∏è badge.
* `voiceToText` flag ON ‚Üí UI appears; RBAC gates Record (create) and viewing (read).

**AC 2 ‚Äî Recording & Upload**

* Record ‚Üí Stop ‚Üí Save uploads ‚â§120s or ‚â§5 MB; returns `{ id, url, duration, createdAt }`.

**AC 3 ‚Äî Playback & Listing**

* Task Detail shows list with duration + Play.
* Task List shows üéôÔ∏è badge when `voice_notes_count > 0` (flag+RBAC gated).

**AC 4 ‚Äî Errors**

* Mic denied ‚Üí inline guidance; Save disabled.
* Over-limit ‚Üí client blocks; server 413.
* Network/server ‚Üí toast; UI remains consistent.

**AC 5 ‚Äî API Contracts (v1)**

* `POST /api/tasks/:id/voice-notes` (multipart: `file`, `duration`) ‚Üí 201 `{ item }` or 400/403/413.
* `GET /api/tasks/:id/voice-notes` ‚Üí 200 `{ items: [...] }`.

**AC 6 ‚Äî Tests & Docs**

* Smoke pass for Admin + Viewer.
* `VOICE_NOTES.md` and CHANGELOG updated.

# Smoke script (copy‚Äìpaste to Notion ‚ÄúTest Scripts‚Äù)

**Given**: `features.json ‚Üí voiceToText: true`, role = **Admin**
**When**: Open Task Detail ‚Üí click **Record** ‚Üí speak 5‚Äì10s ‚Üí **Stop** ‚Üí **Save**
**Then**: 201 created; note appears with duration; Play works; Task List shows `üéôÔ∏è 1`.

**Negative A (Flag OFF)**
Set `voiceToText: false` ‚Üí reload Task Detail + Task List ‚Üí Record UI and badge are **hidden**.

**Negative B (Viewer)**
Flag ON; switch role to Viewer (dev banner).

* Task Detail: Record UI hidden (if `tasks.voice.create` not granted to Viewer).
* If your RBAC grants `tasks.voice.read` to Viewer, playback is allowed; a `POST` attempt via curl returns 403.

**Negative C (Over-limit)**
Try recording >120 s or upload >5 MB file ‚Üí client blocks; forced POST returns 413.

**Artifacts**
3 screenshots: Recording UI, Saved list with one note, Task List showing `üéôÔ∏è N`.

# Curl checks (internal dev headers)

> Replace `{TASK_ID}` and `{BIG_PATH}` as needed.

**List notes**

```bash
curl -s http://localhost:3000/api/tasks/{TASK_ID}/voice-notes \
  -H 'X-Dev-User-Email: test@edenplumbing.com' \
  -H 'X-Dev-User-Id: 855546bf-f53d-4538-b8d5-cd30f5c157a2' \
  -H 'X-Dev-Role: Admin' | jq
```

**Unauthorized create (Viewer)**

```bash
curl -s -o /dev/null -w "%{http_code}\n" -X POST \
  -F "file=@sample.webm" -F "duration=8" \
  http://localhost:3000/api/tasks/{TASK_ID}/voice-notes \
  -H 'X-Dev-User-Email: viewer@example.com' \
  -H 'X-Dev-User-Id: d5196861-7d09-40d7-a3cc-c683394a40f9' \
  -H 'X-Dev-Role: Viewer'
# expect: 403
```

**Payload too large**

```bash
# create a 6MB file for test
dd if=/dev/urandom of=big.raw bs=1M count=6
curl -s -o /dev/null -w "%{http_code}\n" -X POST \
  -F "file=@big.raw;type=audio/webm" -F "duration=10" \
  http://localhost:3000/api/tasks/{TASK_ID}/voice-notes \
  -H 'X-Dev-User-Email: test@edenplumbing.com' \
  -H 'X-Dev-User-Id: 855546bf-f53d-4538-b8d5-cd30f5c157a2' \
  -H 'X-Dev-Role: Admin'
# expect: 413
```

**Tasks list returns count**

```bash
curl -s 'http://localhost:3000/api/tasks?limit=5' \
  -H 'X-Dev-User-Email: test@edenplumbing.com' \
  -H 'X-Dev-User-Id: 855546bf-f53d-4538-b8d5-cd30f5c157a2' \
  -H 'X-Dev-Role: Admin' \
  | jq '.items[] | {id, voiceNotesCount: (.voice_notes_count // .voiceNotesCount)}'
```

# PR summary (paste into PR)

**Title:** feature(tasks): Voice Notes v1 (flagged) + üéôÔ∏è badge (internal)

**Why:** Internal-only audio notes for tasks. Flag-gated for safe rollout; RBAC enforced; badge completes the slice.

**Definition of Done**

* [x] AC met (see Notion ‚ÄúTasks ‚Äî Voice Notes (Flagged, Internal)‚Äù).
* [x] DB migration/table present: `task_voice_notes` (FK tasks, cascade delete).
* [x] API contracts documented:

  * POST `/api/tasks/:id/voice-notes` ‚Üí 201/400/403/413
  * GET `/api/tasks/:id/voice-notes` ‚Üí 200
  * GET `/api/tasks` includes `voice_notes_count`
* [x] Backend RBAC verified: `tasks.voice.create`, `tasks.voice.read`.
* [x] Frontend: `<RoutePermission>` and `<RequirePermission>` wired; Record UI + Badge gated; empty/error/loading handled.
* [x] Feature flag `voiceToText` in `src/config/features.json` (default **OFF**).
* [x] Smoke script executed with screenshots/console.
* [x] Docs updated: `VOICE_NOTES.md` + CHANGELOG.

# RBAC Matrix deltas (add to Notion)

| Role              | Resource | Action | Allowed | Notes                     |
| ----------------- | -------- | ------ | ------- | ------------------------- |
| Admin             | voice    | create | true    | Can record/upload         |
| Admin             | voice    | read   | true    | Can list/play             |
| Ops Lead          | voice    | create | true    |                           |
| Ops Lead          | voice    | read   | true    |                           |
| Field Ops         | voice    | create | true    | Mobile recording          |
| Field Ops         | voice    | read   | true    |                           |
| Project Manager   | voice    | create | true    |                           |
| Project Manager   | voice    | read   | true    |                           |
| Contributor       | voice    | create | true    |                           |
| Contributor       | voice    | read   | true    |                           |
| Office Admin      | voice    | create | true    |                           |
| Office Admin      | voice    | read   | true    |                           |
| Estimator         | voice    | create | true    | Optional                  |
| Estimator         | voice    | read   | true    |                           |
| *Others* (if any) | voice    | read   | true    | If you opted ‚Äúread = all‚Äù |

Adjust to match your current role set.

# CHANGELOG snippet (append)

```
## 2025-10-28 ‚Äî Tasks: Voice Notes (Internal, Flagged)
Layers: Data ‚úÖ API ‚úÖ RBAC ‚úÖ Frontend ‚úÖ Flags ‚úÖ Test ‚úÖ Docs ‚úÖ
- DB: task_voice_notes table (FK tasks, cascade; indexes on task_id, created_at).
- API: POST/GET /api/tasks/:id/voice-notes with size/time/MIME validation.
- List: GET /api/tasks adds voice_notes_count.
- Frontend: VoiceRecorder, VoiceNotesList; üéôÔ∏è badge on Task List.
- Security: Feature flag OFF by default; RBAC on create/read; existence leak prevented via flag+RBAC.
```

# Notion updates

* **Slices ‚Üí ‚ÄúTasks ‚Äî Voice Notes (Flagged, Internal)‚Äù**: set **Status = Shipped**, attach smoke screenshots.
* **Test Scripts**: mark run **PASS**; link evidence.
* **Feature Flags**: ensure `voiceToText` = **false** (default).

---

[Layer: Planning] [Stage: Queue next slice]

Pick one, same cadence:

1. **Transcription (flagged)** ‚Äî add async Whisper pipeline (`POST /voice-notes/:id/transcribe` + `GET transcript`), UI shows text + copy; RBAC: `voice.transcribe`.
2. **Task attachments (files)** ‚Äî generic file uploads (PDF/JPG/PNG) with size/type validation; badge + count; delete flow with archive-first.
3. **RBAC sync audit** ‚Äî script to diff `rbac.json` vs DB role_permissions and alert on drift.

Whichever you choose, I‚Äôll lay down the AC and smoke in Notion and we slice it cleanly.
