Step: Add a global Theme Toggle (light/dark, persisted) and subtle route transitions with Framer Motion (≤200 ms) across all pages.

Why it matters: A tiny dose of motion + a visible theme switch makes the new design tokens feel intentional and polished—without touching individual pages.

Inputs needed:

Repo path (assumes apps/coordination_ui)

Your router entry (assumes apps/coordination_ui/src/App.jsx + main.jsx)

Command (copy–paste):

# 1) Install framer-motion
cd apps/coordination_ui
npm i framer-motion

# 2) Create a tiny ThemeProvider and Toggle (persists to localStorage)
applypatch <<'PATCH'
*** Begin Patch
*** Add File: src/components/ThemeProvider.jsx
import { createContext, useContext, useEffect, useMemo, useState } from 'react';

const ThemeCtx = createContext({ theme: 'auto', setTheme: () => {} });

function getInitialTheme() {
  const saved = localStorage.getItem('eden.theme');
  return saved || 'auto';
}

export function ThemeProvider({ children }) {
  const [theme, setTheme] = useState(() => getInitialTheme());

  useEffect(() => {
    localStorage.setItem('eden.theme', theme);
    const root = document.documentElement;
    // Remove explicit theme first
    root.removeAttribute('data-theme');
    if (theme === 'dark') root.setAttribute('data-theme', 'dark');
    // 'auto' respects prefers-color-scheme (handled by CSS tokens)
  }, [theme]);

  const value = useMemo(() => ({ theme, setTheme }), [theme]);
  return <ThemeCtx.Provider value={value}>{children}</ThemeCtx.Provider>;
}

export function useTheme() { return useContext(ThemeCtx); }

export function ThemeToggle() {
  const { theme, setTheme } = useTheme();
  return (
    <div style={{ display:'inline-flex', gap:8, alignItems:'center' }}>
      <label className="muted" style={{ fontSize: '0.85rem' }}>Theme</label>
      <select
        value={theme}
        onChange={(e) => setTheme(e.target.value)}
        aria-label="Theme selection"
      >
        <option value="auto">Auto</option>
        <option value="light">Light</option>
        <option value="dark">Dark</option>
      </select>
    </div>
  );
}
*** End Patch
PATCH

# 3) Add route transitions (AnimatePresence + motion)
applypatch <<'PATCH'
*** Begin Patch
*** Update File: src/App.jsx
@@
-import { BrowserRouter, Routes, Route } from 'react-router-dom';
+import { BrowserRouter, Routes, Route, useLocation } from 'react-router-dom';
+import { AnimatePresence, motion } from 'framer-motion';
+import { ThemeProvider, ThemeToggle } from './components/ThemeProvider.jsx';
@@
-export default function App() {
-  return (
-    <BrowserRouter>
-      {/* Your header / nav */}
-      <Routes>
-        <Route path="/showcase" element={<Showcase />} />
-        {/* existing routes... */}
-      </Routes>
-    </BrowserRouter>
-  );
-}
+function RouteTransitions() {
+  const location = useLocation();
+  const variants = {
+    initial: { opacity: 0, y: 6 },
+    enter:   { opacity: 1, y: 0, transition: { duration: 0.18, ease: [0.2,0.8,0.2,1] } },
+    exit:    { opacity: 0, y: -6, transition: { duration: 0.15, ease: [0.2,0.8,0.2,1] } },
+  };
+  return (
+    <AnimatePresence mode="wait">
+      <motion.main
+        key={location.pathname}
+        variants={variants}
+        initial="initial"
+        animate="enter"
+        exit="exit"
+        style={{ padding: '16px' }}
+      >
+        <Routes location={location}>
+          <Route path="/showcase" element={<Showcase />} />
+          {/* existing routes... */}
+        </Routes>
+      </motion.main>
+    </AnimatePresence>
+  );
+}
+
+export default function App() {
+  return (
+    <ThemeProvider>
+      <BrowserRouter>
+        {/* Example top chrome; place toggle where your header lives */}
+        <div className="chrome" style={{ position:'sticky', top:0, zIndex:20, display:'flex', justifyContent:'space-between', alignItems:'center', padding:'10px 16px' }}>
+          <div style={{ fontWeight:700 }}>Eden</div>
+          <ThemeToggle />
+        </div>
+        <RouteTransitions />
+      </BrowserRouter>
+    </ThemeProvider>
+  );
+}
*** End Patch
PATCH


Success check:

Start the app (npm run dev in apps/coordination_ui).

Navigate between routes (e.g., /showcase → /velocity → /incidents): each page gently fades/slides (≈0.18 s).

Use the Theme selector in the top chrome: Light/Dark/Auto applies instantly; refresh the page to confirm it persists.

Next: wait for user